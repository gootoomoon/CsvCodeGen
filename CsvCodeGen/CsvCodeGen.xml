<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>CsvCodeGen</name>
  </assembly>
  <members>
    <member name="N:FileGenLoaderDomain">
    </member>
    <member name="M:FileGenLoaderDomain.IPlug.GenerateOnFile(System.Text.StringBuilder,System.String,System.String,System.String)">
      <param name="codes">
</param>
      <param name="wszInputFilePath">
</param>
      <param name="bstrInputFileContents">
</param>
      <param name="wszDefaultNamespace">
</param>
    </member>
    <member name="T:FileGenLoaderDomain.BasePlug">
    </member>
    <member name="M:FileGenLoaderDomain.BasePlug.GenerateOnFile(System.Text.StringBuilder,System.String,System.String,System.String)">
      <param name="codes">
</param>
      <param name="wszInputFilePath">
</param>
      <param name="bstrInputFileContents">
</param>
      <param name="wszDefaultNamespace">
</param>
    </member>
    <member name="P:FileGenLoaderDomain.BasePlug.Exction">
      <summary>
扩展名</summary>
    </member>
    <member name="N:CsvCodeGen.ConfigWebService">
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.ConfigSoapClient">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.GetList(System.String,System.String,System.String)">
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
类型</param>
    </member>
    <member name="N:CsvCodeGen.Config">
    </member>
    <member name="T:CsvCodeGen.Config.Cfs">
    </member>
    <member name="M:CsvCodeGen.Config.Cfs.Init">
    </member>
    <member name="M:CsvCodeGen.Config.Cfs.GetAssembly">
    </member>
    <member name="M:CsvCodeGen.Config.Cfs.GZipCompress(System.Byte[])">
      <summary>
GZipStream压缩</summary>
      <param name="buffer">
</param>
    </member>
    <member name="M:CsvCodeGen.Config.Cfs.GZipDecompress(System.Byte[])">
      <summary>
GZipStream解压</summary>
      <param name="buff">
</param>
    </member>
    <member name="M:CsvCodeGen.Config.Cfs.LoadConfig(System.String,System.String)">
      <summary>
读取Config文件</summary>
      <returns>
返回字符串</returns>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:CsvCodeGen.Config.Cfs.LoadConfigFileBytes(System.String,System.String)">
      <summary>
读取配置返回Byte[]</summary>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:CsvCodeGen.Config.Cfs.SaveConfig(System.String,System.String,System.Object)">
      <summary>
保存配置</summary>
      <returns>
是否成功</returns>
      <param name="key">
名字</param>
      <param name="type">
</param>
      <param name="data">
string 或者 byte[]</param>
    </member>
    <member name="M:CsvCodeGen.Config.Cfs.GetList(System.String)">
      <summary>
获取列表</summary>
      <param name="type">
</param>
    </member>
    <member name="P:CsvCodeGen.Config.Cfs.IsSoap">
      <summary>
Gets or sets a value indicating whether this instance .</summary>
    </member>
    <member name="P:CsvCodeGen.Config.Cfs.Token">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:CsvCodeGen.Config.Cfs.App">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:ConfigWebService">
    </member>
    <member name="T:ConfigWebService.Config">
    </member>
    <member name="M:ConfigWebService.Config.GetPath(System.String,System.String,System.String)">
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:ConfigWebService.Config.LoadConfig(System.String,System.String,System.String,System.String)">
      <returns>
返回字符串</returns>
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:ConfigWebService.Config.LoadConfigFileBytes(System.String,System.String,System.String,System.String)">
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:ConfigWebService.Config.SaveConfig(System.String,System.String,System.String,System.String,System.Object)">
      <returns>
是否成功</returns>
      <param name="token">
</param>
      <param name="app">
应用</param>
      <param name="type">
</param>
      <param name="key">
名字</param>
      <param name="data">
string 或者 byte[]</param>
    </member>
    <member name="M:ConfigWebService.Config.GetList(System.String,System.String,System.String)">
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
类型</param>
    </member>
    <member name="M:ConfigWebService.Config.GetTypeList(System.String,System.String,System.String)">
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
    </member>
    <member name="P:ConfigWebService.Config.DataPath">
      <summary>
Gets .</summary>
    </member>
    <member name="P:ConfigWebService.Config.Encoding">
      <summary>
Gets .</summary>
    </member>
    <member name="M:ConfigWebService.IWebConfig.LoadConfig(System.String,System.String,System.String,System.String)">
      <summary>
读取Config文件</summary>
      <returns>
返回字符串</returns>
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:ConfigWebService.IWebConfig.LoadConfigFileBytes(System.String,System.String,System.String,System.String)">
      <summary>
读取配置返回Byte[]</summary>
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:ConfigWebService.IWebConfig.SaveConfig(System.String,System.String,System.String,System.String,System.Object)">
      <summary>
保存配置</summary>
      <returns>
是否成功</returns>
      <param name="token">
</param>
      <param name="app">
应用</param>
      <param name="type">
</param>
      <param name="key">
名字</param>
      <param name="data">
string 或者 byte[]</param>
    </member>
    <member name="M:ConfigWebService.IWebConfig.GetList(System.String,System.String,System.String)">
      <summary>
获取目录下文件列表</summary>
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
类型</param>
    </member>
    <member name="N:CsvCodeGen">
    </member>
    <member name="T:CsvCodeGen.Config`2">
      <summary>
配置类</summary>
    </member>
    <member name="M:CsvCodeGen.Config`2.ContainsKey(`0)">
      <param name="key">
</param>
    </member>
    <member name="M:CsvCodeGen.Config`2.PreParse">
    </member>
    <member name="M:CsvCodeGen.Config`2.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000038C$SL$$LE$Config$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.Config`2.GetValue(System.Object)">
      <param name="key">
</param>
    </member>
    <member name="P:CsvCodeGen.Config`2.UpdateTime">
      <summary>
更新时间</summary>
    </member>
    <member name="P:CsvCodeGen.Config`2.ConfigName">
      <summary>
配置名称</summary>
    </member>
    <member name="P:CsvCodeGen.Config`2.Data">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:CsvCodeGen.Config`2.Count">
      <summary>
Gets .</summary>
    </member>
    <member name="P:CsvCodeGen.Config`2.Parse">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:CsvCodeGen.Config`2.Item(`0)">
      <summary>
Gets .</summary>
      <param name="key">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigAttribute">
      <summary>
配置属性</summary>
    </member>
    <member name="P:CsvCodeGen.ConfigAttribute.IsList">
      <summary>
是否是列表(非必须)</summary>
    </member>
    <member name="P:CsvCodeGen.ConfigAttribute.IsKey">
      <summary>
是否是关键字段(必须有一个)</summary>
    </member>
    <member name="P:CsvCodeGen.ConfigAttribute.Index">
      <summary>
数据所在节点(必须)</summary>
    </member>
    <member name="P:CsvCodeGen.ConfigAttribute.DefaultValue">
      <summary>
默认值(非必须)</summary>
    </member>
    <member name="P:CsvCodeGen.ConfigAttribute.Desc">
      <summary>
备注</summary>
    </member>
    <member name="T:CsvCodeGen.ConfigAutoParseAttribute">
      <summary>
解析属性</summary>
    </member>
    <member name="P:CsvCodeGen.ConfigAutoParseAttribute.File">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:CsvCodeGen.ConfigAutoParseAttribute.ParseType">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:CsvCodeGen.CsvConfigCodeBuilder">
    </member>
    <member name="M:CsvCodeGen.CsvConfigCodeBuilder.GenerateOnFile(System.Text.StringBuilder,System.String,System.String,System.String)">
      <param name="codes">
</param>
      <param name="wszInputFilePath">
</param>
      <param name="bstrInputFileContents">
</param>
      <param name="wszDefaultNamespace">
</param>
    </member>
    <member name="P:CsvCodeGen.CsvConfigCodeBuilder.Exction">
      <summary>
Gets .</summary>
    </member>
    <member name="T:CsvCodeGen.CsvCodeBuilder">
    </member>
    <member name="M:CsvCodeGen.CsvCodeBuilder.GetTypeDefine(System.String)">
      <param name="wszInputFilePath">
</param>
    </member>
    <member name="M:CsvCodeGen.CsvCodeBuilder.GetTranslateByUrl(System.String,System.String,System.String)">
      <summary>
自动翻译</summary>
      <param name="url">
</param>
      <param name="retMatch">
</param>
      <param name="input">
</param>
    </member>
    <member name="M:CsvCodeGen.CsvCodeBuilder.GetTypeNameMapDefine(System.String)">
      <param name="wszInputFilePath">
</param>
    </member>
    <member name="M:CsvCodeGen.CsvCodeBuilder.HeadFix(System.String)">
      <param name="head">
</param>
    </member>
    <member name="M:CsvCodeGen.CsvCodeBuilder.GenerateOnFile(System.Text.StringBuilder,System.String,System.String,System.String)">
      <param name="codes">
</param>
      <param name="wszInputFilePath">
</param>
      <param name="bstrInputFileContents">
</param>
      <param name="wszDefaultNamespace">
</param>
    </member>
    <member name="P:CsvCodeGen.CsvCodeBuilder.Exction">
      <summary>
Gets .</summary>
    </member>
    <member name="T:CsvCodeGen.CfsConfig">
    </member>
    <member name="M:CsvCodeGen.CfsConfig.Init">
    </member>
    <member name="M:CsvCodeGen.CfsConfig.GetEntryAssembly">
    </member>
    <member name="M:CsvCodeGen.CfsConfig.Reload">
    </member>
    <member name="M:CsvCodeGen.CfsConfig.Reload(System.Reflection.Assembly)">
      <param name="entryAssembly">
</param>
    </member>
    <member name="P:CsvCodeGen.CfsConfig.DataPath">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="T:CsvCodeGen.CsvParse">
      <summary>
Csv解析器</summary>
    </member>
    <member name="M:CsvCodeGen.CsvParse.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000003B0$SL$$LE$CsvParse$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.CsvParse.DoParse``2">
    </member>
    <member name="M:CsvCodeGen.CsvParse.Convert(System.Object,System.Type)">
      <summary>
类型转换</summary>
      <param name="value">
</param>
      <param name="returnType">
</param>
    </member>
    <member name="P:CsvCodeGen.CsvParse.FilePath">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:CsvCodeGen.CsvParse.LastTime">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="P:CsvCodeGen.CsvParse.CheckLenght">
      <summary>
Gets or sets a value indicating whether .</summary>
    </member>
    <member name="P:CsvCodeGen.CsvParse.BaseData">
      <summary>
基本数据(Csv,string)</summary>
    </member>
    <member name="P:CsvCodeGen.CsvParse.ConfigName">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:Excel.Core">
    </member>
    <member name="T:Excel.Core.FormatReader">
    </member>
    <member name="M:Excel.Core.FormatReader.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000003BB$SL$$LE$FormatReader$EL$ class.</summary>
    </member>
    <member name="M:Excel.Core.FormatReader.IsDateFormatString">
    </member>
    <member name="P:Excel.Core.FormatReader.FormatString">
      <summary>
Gets or sets .</summary>
    </member>
    <member name="N:Excel.Core.OpenXmlFormat">
    </member>
    <member name="T:Excel.Core.OpenXmlFormat.XmlReaderExtensions">
    </member>
    <member name="T:Excel.Core.ZipWorker">
    </member>
    <member name="M:Excel.Core.ZipWorker.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000003C1$SL$$LE$ZipWorker$EL$ class.</summary>
    </member>
    <member name="M:Excel.Core.ZipWorker.Extract(System.IO.Stream)">
      <summary>
Extracts the specified zip file stream.</summary>
      <param name="fileStream">
The zip file stream.</param>
    </member>
    <member name="M:Excel.Core.ZipWorker.GetSharedStringsStream">
      <summary>
Gets the shared strings stream.</summary>
    </member>
    <member name="M:Excel.Core.ZipWorker.GetStylesStream">
      <summary>
Gets the styles stream.</summary>
    </member>
    <member name="M:Excel.Core.ZipWorker.GetWorkbookStream">
      <summary>
Gets the workbook stream.</summary>
    </member>
    <member name="M:Excel.Core.ZipWorker.GetWorksheetStream(System.Int32)">
      <summary>
Gets the worksheet stream.</summary>
      <param name="sheetId">
The sheet id.</param>
    </member>
    <member name="M:Excel.Core.ZipWorker.GetWorksheetStream(System.String)">
      <param name="sheetPath">
</param>
    </member>
    <member name="M:Excel.Core.ZipWorker.GetWorkbookRelsStream">
      <summary>
Gets the workbook rels stream.</summary>
    </member>
    <member name="M:Excel.Core.ZipWorker.Dispose">
      <summary>
Releases all resources used by the. $LS$topic_00000000000003C1$SL$$LE$ZipWorker$EL$.</summary>
    </member>
    <member name="P:Excel.Core.ZipWorker.IsValid">
      <summary>
Gets a value indicating whether this instance is valid.</summary>
    </member>
    <member name="P:Excel.Core.ZipWorker.TempPath">
      <summary>
Gets the temp path for extracted files.</summary>
    </member>
    <member name="P:Excel.Core.ZipWorker.ExceptionMessage">
      <summary>
Gets the exception message.</summary>
    </member>
    <member name="N:Excel">
    </member>
    <member name="T:Excel.ExcelBinaryReader">
      <summary>
ExcelDataReader Class</summary>
    </member>
    <member name="M:Excel.ExcelBinaryReader.Dispose">
      <summary>
Releases all resources used by the. $LS$topic_00000000000003CF$SL$$LE$ExcelBinaryReader$EL$.</summary>
    </member>
    <member name="M:Excel.ExcelBinaryReader.isV8">
    </member>
    <member name="M:Excel.ExcelBinaryReader.Initialize(System.IO.Stream)">
      <param name="fileStream">
The file stream.</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.AsDataSet">
      <returns>
The DataSet</returns>
    </member>
    <member name="M:Excel.ExcelBinaryReader.AsDataSet(System.Boolean)">
      <returns>
The DataSet</returns>
      <param name="convertOADateTime">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.Close">
    </member>
    <member name="M:Excel.ExcelBinaryReader.NextResult">
    </member>
    <member name="M:Excel.ExcelBinaryReader.Read">
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetBoolean(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetDateTime(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetDecimal(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetDouble(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetFloat(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetInt16(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetInt32(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetInt64(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetString(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetValue(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.IsDBNull(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetSchemaTable">
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetByte(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <param name="i">
</param>
      <param name="fieldOffset">
</param>
      <param name="buffer">
</param>
      <param name="bufferoffset">
</param>
      <param name="length">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetChar(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <param name="i">
</param>
      <param name="fieldoffset">
</param>
      <param name="buffer">
</param>
      <param name="bufferoffset">
</param>
      <param name="length">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetData(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetDataTypeName(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetFieldType(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetGuid(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetName(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetOrdinal(System.String)">
      <param name="name">
</param>
    </member>
    <member name="M:Excel.ExcelBinaryReader.GetValues(System.Object[])">
      <param name="values">
</param>
    </member>
    <member name="P:Excel.ExcelBinaryReader.RecordsAffected">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.Item(System.Int32)">
      <summary>
Gets .</summary>
      <param name="i">
</param>
    </member>
    <member name="P:Excel.ExcelBinaryReader.ConvertOaDate">
      <summary>
Gets or sets a value indicating whether .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.FieldCount">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.ReadOption">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.IsFirstRowAsColumnNames">
      <summary>
Gets or sets a value indicating whether this instance .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.ResultsCount">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.ExceptionMessage">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.IsClosed">
      <summary>
Gets a value indicating whether this instance .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.Name">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.IsValid">
      <summary>
Gets a value indicating whether this instance .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.Depth">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelBinaryReader.Item(System.String)">
      <summary>
Gets .</summary>
      <param name="name">
</param>
    </member>
    <member name="T:Excel.ExcelOpenXmlReader">
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.Initialize(System.IO.Stream)">
      <param name="fileStream">
The file stream.</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.AsDataSet">
      <returns>
The DataSet</returns>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.AsDataSet(System.Boolean)">
      <returns>
The DataSet</returns>
      <param name="convertOADateTime">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.Close">
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.NextResult">
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.Read">
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetBoolean(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetDateTime(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetDecimal(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetDouble(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetFloat(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetInt16(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetInt32(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetInt64(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetString(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetValue(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.IsDBNull(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.Dispose">
      <summary>
Releases all resources used by the. $LS$topic_00000000000003FC$SL$$LE$ExcelOpenXmlReader$EL$.</summary>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetSchemaTable">
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetByte(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <param name="i">
</param>
      <param name="fieldOffset">
</param>
      <param name="buffer">
</param>
      <param name="bufferoffset">
</param>
      <param name="length">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetChar(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <param name="i">
</param>
      <param name="fieldoffset">
</param>
      <param name="buffer">
</param>
      <param name="bufferoffset">
</param>
      <param name="length">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetData(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetDataTypeName(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetFieldType(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetGuid(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetName(System.Int32)">
      <param name="i">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetOrdinal(System.String)">
      <param name="name">
</param>
    </member>
    <member name="M:Excel.ExcelOpenXmlReader.GetValues(System.Object[])">
      <param name="values">
</param>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.Depth">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.RecordsAffected">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.ExceptionMessage">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.Item(System.String)">
      <summary>
Gets .</summary>
      <param name="name">
</param>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.ResultsCount">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.FieldCount">
      <summary>
Gets .</summary>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.IsClosed">
      <summary>
Gets a value indicating whether this instance .</summary>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.IsValid">
      <summary>
Gets a value indicating whether this instance .</summary>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.IsFirstRowAsColumnNames">
      <summary>
Gets or sets a value indicating whether this instance .</summary>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.Item(System.Int32)">
      <summary>
Gets .</summary>
      <param name="i">
</param>
    </member>
    <member name="P:Excel.ExcelOpenXmlReader.Name">
      <summary>
Gets .</summary>
    </member>
    <member name="T:Excel.ExcelReaderFactory">
      <summary>
The ExcelReader Factory</summary>
    </member>
    <member name="M:Excel.ExcelReaderFactory.CreateBinaryReader(System.IO.Stream)">
      <summary>
Creates an instance of $LS$topic_00000000000003CF$SL$$LE$ExcelBinaryReader$EL$</summary>
      <param name="fileStream">
The file stream.</param>
    </member>
    <member name="M:Excel.ExcelReaderFactory.CreateBinaryReader(System.IO.Stream,Excel.ReadOption)">
      <summary>
Creates an instance of $LS$topic_00000000000003CF$SL$$LE$ExcelBinaryReader$EL$</summary>
      <param name="fileStream">
The file stream.</param>
      <param name="option">
</param>
    </member>
    <member name="M:Excel.ExcelReaderFactory.CreateBinaryReader(System.IO.Stream,System.Boolean)">
      <summary>
Creates an instance of $LS$topic_00000000000003CF$SL$$LE$ExcelBinaryReader$EL$</summary>
      <param name="fileStream">
The file stream.</param>
      <param name="convertOADate">
</param>
    </member>
    <member name="M:Excel.ExcelReaderFactory.CreateBinaryReader(System.IO.Stream,System.Boolean,Excel.ReadOption)">
      <summary>
Creates an instance of $LS$topic_00000000000003CF$SL$$LE$ExcelBinaryReader$EL$</summary>
      <param name="fileStream">
The file stream.</param>
      <param name="convertOADate">
</param>
      <param name="readOption">
</param>
    </member>
    <member name="M:Excel.ExcelReaderFactory.CreateOpenXmlReader(System.IO.Stream)">
      <summary>
Creates an instance of $LS$topic_00000000000003FC$SL$$LE$ExcelOpenXmlReader$EL$</summary>
      <param name="fileStream">
The file stream.</param>
    </member>
    <member name="N:Excel.Exceptions">
    </member>
    <member name="T:Excel.Exceptions.BiffRecordException">
    </member>
    <member name="M:Excel.Exceptions.BiffRecordException.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000042D$SL$$LE$BiffRecordException$EL$ class.</summary>
    </member>
    <member name="M:Excel.Exceptions.BiffRecordException.#ctor(System.String)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000042D$SL$$LE$BiffRecordException$EL$ class.</summary>
      <param name="message">
</param>
    </member>
    <member name="M:Excel.Exceptions.BiffRecordException.#ctor(System.String,System.Exception)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000042D$SL$$LE$BiffRecordException$EL$ class.</summary>
      <param name="message">
</param>
      <param name="innerException">
</param>
    </member>
    <member name="T:Excel.Exceptions.HeaderException">
    </member>
    <member name="M:Excel.Exceptions.HeaderException.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000431$SL$$LE$HeaderException$EL$ class.</summary>
    </member>
    <member name="M:Excel.Exceptions.HeaderException.#ctor(System.String)">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000431$SL$$LE$HeaderException$EL$ class.</summary>
      <param name="message">
</param>
    </member>
    <member name="M:Excel.Exceptions.HeaderException.#ctor(System.String,System.Exception)">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000431$SL$$LE$HeaderException$EL$ class.</summary>
      <param name="message">
</param>
      <param name="innerException">
</param>
    </member>
    <member name="M:Excel.IExcelDataReader.Initialize(System.IO.Stream)">
      <summary>
Initializes the instance with specified file stream.</summary>
      <param name="fileStream">
The file stream.</param>
    </member>
    <member name="M:Excel.IExcelDataReader.AsDataSet">
      <summary>
Read all data in to DataSet and return it</summary>
      <returns>
The DataSet</returns>
    </member>
    <member name="M:Excel.IExcelDataReader.AsDataSet(System.Boolean)">
      <summary>
Read all data in to DataSet and return it</summary>
      <returns>
The DataSet</returns>
      <param name="convertOADateTime">
if set to <c>true</c> [try auto convert OA date time format].</param>
    </member>
    <member name="P:Excel.IExcelDataReader.Name">
      <summary>
Gets the sheet name.</summary>
    </member>
    <member name="P:Excel.IExcelDataReader.ExceptionMessage">
      <summary>
Gets the exception message in case of error.</summary>
    </member>
    <member name="P:Excel.IExcelDataReader.IsValid">
      <summary>
Gets a value indicating whether file stream is valid.</summary>
    </member>
    <member name="P:Excel.IExcelDataReader.ResultsCount">
      <summary>
Gets the number of results (workbooks).</summary>
    </member>
    <member name="P:Excel.IExcelDataReader.IsFirstRowAsColumnNames">
      <summary>
Gets or sets a value indicating whether the first row contains the column names.</summary>
    </member>
    <member name="N:Excel.Log">
    </member>
    <member name="M:Excel.Log.ILog.InitializeFor(System.String)">
      <summary>
Initializes the instance for the logger name</summary>
      <param name="loggerName">
Name of the logger</param>
    </member>
    <member name="M:Excel.Log.ILog.Debug(System.String,System.Object[])">
      <summary>
Debug level of the specified message. The other method is preferred since the execution is deferred.</summary>
      <param name="message">
The message.</param>
      <param name="formatting">
The formatting.</param>
    </member>
    <member name="M:Excel.Log.ILog.Info(System.String,System.Object[])">
      <summary>
Info level of the specified message. The other method is preferred since the execution is deferred.</summary>
      <param name="message">
The message.</param>
      <param name="formatting">
The formatting.</param>
    </member>
    <member name="M:Excel.Log.ILog.Warn(System.String,System.Object[])">
      <summary>
Warn level of the specified message. The other method is preferred since the execution is deferred.</summary>
      <param name="message">
The message.</param>
      <param name="formatting">
The formatting.</param>
    </member>
    <member name="M:Excel.Log.ILog.Error(System.String,System.Object[])">
      <summary>
Error level of the specified message. The other method is preferred since the execution is deferred.</summary>
      <param name="message">
The message.</param>
      <param name="formatting">
The formatting.</param>
    </member>
    <member name="M:Excel.Log.ILog.Fatal(System.String,System.Object[])">
      <summary>
Fatal level of the specified message. The other method is preferred since the execution is deferred.</summary>
      <param name="message">
The message.</param>
      <param name="formatting">
The formatting.</param>
    </member>
    <member name="T:Excel.Log.Log">
      <summary>
Logger type initialization</summary>
    </member>
    <member name="M:Excel.Log.Log.InitializeWith``1">
      <summary>
Sets up logging to be with a certain type</summary>
    </member>
    <member name="M:Excel.Log.Log.InitializeWith(Excel.Log.ILog)">
      <summary>
Sets up logging to be with a certain instance. The other method is preferred.</summary>
      <remarks>
This is mostly geared towards testing</remarks>
      <param name="loggerType">
Type of the logger.</param>
    </member>
    <member name="M:Excel.Log.Log.GetLoggerFor(System.String)">
      <summary>
Initializes a new instance of a logger for an object. This should be done only once per object name.</summary>
      <returns>
ILog instance for an object if log type has been intialized; otherwise null</returns>
      <param name="objectName">
Name of the object.</param>
    </member>
    <member name="N:Excel.Log.Logger">
    </member>
    <member name="T:Excel.Log.Logger.NullLog">
      <summary>
The default logger until one is set.</summary>
    </member>
    <member name="M:Excel.Log.Logger.NullLog.InitializeFor(System.String)">
      <param name="loggerName">
</param>
    </member>
    <member name="M:Excel.Log.Logger.NullLog.Debug(System.String,System.Object[])">
      <param name="message">
</param>
      <param name="formatting">
</param>
    </member>
    <member name="M:Excel.Log.Logger.NullLog.Info(System.String,System.Object[])">
      <param name="message">
</param>
      <param name="formatting">
</param>
    </member>
    <member name="M:Excel.Log.Logger.NullLog.Warn(System.String,System.Object[])">
      <param name="message">
</param>
      <param name="formatting">
</param>
    </member>
    <member name="M:Excel.Log.Logger.NullLog.Error(System.String,System.Object[])">
      <param name="message">
</param>
      <param name="formatting">
</param>
    </member>
    <member name="M:Excel.Log.Logger.NullLog.Fatal(System.String,System.Object[])">
      <param name="message">
</param>
      <param name="formatting">
</param>
    </member>
    <member name="T:Excel.Log.LogManager">
      <summary>
2.0 version of LogExtensions, not as awesome as Extension methods</summary>
    </member>
    <member name="M:Excel.Log.LogManager.Log``1(``0)">
      <summary>
Gets the logger for $LS$$SL$$LE$T$EL$.</summary>
      <returns>
Instance of a logger for the object.</returns>
      <param name="type">
The type to get the logger for.</param>
    </member>
    <member name="M:Excel.Log.LogManager.Log(System.String)">
      <summary>
Gets the logger for the specified object name.</summary>
      <returns>
Instance of a logger for the object.</returns>
      <param name="objectName">
Either use the fully qualified object name or the short. If used with Log&lt;T&gt;() you must use the fully qualified object name"/&gt;</param>
    </member>
    <member name="T:CsvCodeGen.ExcelConfigCodeBuilder">
    </member>
    <member name="M:CsvCodeGen.ExcelConfigCodeBuilder.GenerateOnFile(System.Text.StringBuilder,System.String,System.String,System.String)">
      <param name="codes">
</param>
      <param name="wszInputFilePath">
</param>
      <param name="bstrInputFileContents">
</param>
      <param name="wszDefaultNamespace">
</param>
    </member>
    <member name="P:CsvCodeGen.ExcelConfigCodeBuilder.Exction">
      <summary>
Gets .</summary>
    </member>
    <member name="T:CsvCodeGen.ExcelCodeBuilder">
    </member>
    <member name="M:CsvCodeGen.ExcelCodeBuilder.GenerateOnFile(System.Text.StringBuilder,System.String,System.String,System.String)">
      <param name="codes">
</param>
      <param name="wszInputFilePath">
</param>
      <param name="bstrInputFileContents">
</param>
      <param name="wszDefaultNamespace">
</param>
    </member>
    <member name="M:CsvCodeGen.ExcelCodeBuilder.importExcelToDataSet(System.String,System.String)">
      <param name="FilePath">
</param>
      <param name="TableName">
</param>
    </member>
    <member name="M:CsvCodeGen.ExcelCodeBuilder.getTableName(System.String)">
      <param name="FilePath">
</param>
    </member>
    <member name="P:CsvCodeGen.ExcelCodeBuilder.Exction">
      <summary>
Gets .</summary>
    </member>
    <member name="T:CsvCodeGen.Excel2">
    </member>
    <member name="M:CsvCodeGen.Excel2.importExcelToDataSet(System.String,System.String)">
      <param name="FilePath">
</param>
      <param name="TableName">
</param>
    </member>
    <member name="M:CsvCodeGen.Excel2.getTableName(System.String)">
      <param name="FilePath">
</param>
    </member>
    <member name="T:CsvCodeGen.ExcelParse">
    </member>
    <member name="M:CsvCodeGen.ExcelParse.DoParse``2">
    </member>
    <member name="M:CsvCodeGen.IConfig.PreParse">
      <summary>
预载入</summary>
    </member>
    <member name="M:CsvCodeGen.IConfig.GetValue(System.Object)">
      <summary>
获取值</summary>
      <param name="key">
</param>
    </member>
    <member name="P:CsvCodeGen.IConfig.Parse">
      <summary>
解析器</summary>
    </member>
    <member name="P:CsvCodeGen.IConfig.UpdateTime">
      <summary>
最后更新时间,自动刷新</summary>
    </member>
    <member name="P:CsvCodeGen.IConfig.Count">
      <summary>
数量</summary>
    </member>
    <member name="M:CsvCodeGen.IConfigParse.DoParse``2">
      <summary>
解析数据</summary>
    </member>
    <member name="P:CsvCodeGen.IConfigParse.BaseData">
      <summary>
原始数据</summary>
    </member>
    <member name="P:CsvCodeGen.IConfigParse.CheckLenght">
      <summary>
长度检查,默认true</summary>
    </member>
    <member name="P:CsvCodeGen.IConfigParse.ConfigName">
      <summary>
配置名称</summary>
    </member>
    <member name="P:CsvCodeGen.IConfigParse.LastTime">
      <summary>
最后一次更新</summary>
    </member>
    <member name="P:CsvCodeGen.IConfigParse.FilePath">
      <summary>
路径信息</summary>
    </member>
    <member name="T:FileGenLoaderDomain.Serializable">
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.ConverBytesToStream(System.Byte[])">
      <param name="bData">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.ConverBytesToString(System.Byte[])">
      <param name="bData">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.ConverStreamToByte(System.IO.Stream)">
      <param name="stream">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.ConverStreamToStr(System.IO.Stream)">
      <param name="stream">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.ConverStrToStream(System.String)">
      <param name="Str">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DecodeBase64(System.String,System.String)">
      <param name="code_type">
</param>
      <param name="code">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DeDeflate(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DeepDeserialize(System.String)">
      <param name="bytesstr">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DeepDeserializeByte(System.Byte[])">
      <param name="buff">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DeepDeserializeStream(System.IO.Stream)">
      <param name="stream">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DeepSerialization(System.Object)">
      <param name="mysoap">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DeepSerializationByte(System.Object)">
      <param name="mysoap">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DeepSerializationStream(System.Object)">
      <param name="mysoap">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.Deflate(System.Byte[])">
      <param name="data">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.Deserialize(System.Type,System.String)">
      <param name="returnType">
</param>
      <param name="data">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.Deserialize4File(System.Type,System.String)">
      <param name="type">
</param>
      <param name="file">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.DeserializeByte(System.Type,System.Byte[])">
      <param name="returnType">
</param>
      <param name="data">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.EncodeBase64(System.String,System.String)">
      <param name="code_type">
</param>
      <param name="code">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.Serialiaze(System.Object)">
      <param name="obj">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.Serialiaze2File(System.Object,System.String)">
      <param name="obj">
</param>
      <param name="file">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.SerialiazeByte(System.Object)">
      <param name="obj">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.SerialiazeToByte(System.Object)">
      <param name="obj">
</param>
    </member>
    <member name="M:FileGenLoaderDomain.Serializable.XmlSerializerGet(System.Type)">
      <param name="type">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.ArrayOfString">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoap.Clear(CsvCodeGen.ConfigWebService.ClearRequest)">
      <param name="request">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoap.LoadConfig(CsvCodeGen.ConfigWebService.LoadConfigRequest)">
      <param name="request">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoap.LoadConfigFileBytes(CsvCodeGen.ConfigWebService.LoadConfigFileBytesRequest)">
      <param name="request">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoap.SaveConfig(CsvCodeGen.ConfigWebService.SaveConfigRequest)">
      <param name="request">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoap.GetTypeList(CsvCodeGen.ConfigWebService.GetTypeListRequest)">
      <param name="request">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.ClearRequest">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ClearRequest.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000489$SL$$LE$ClearRequest$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ClearRequest.#ctor(CsvCodeGen.ConfigWebService.ClearRequestBody)">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000489$SL$$LE$ClearRequest$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.ClearRequestBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ClearRequestBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000048C$SL$$LE$ClearRequestBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ClearRequestBody.#ctor(System.String,System.String)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000048C$SL$$LE$ClearRequestBody$EL$ class.</summary>
      <param name="token">
</param>
      <param name="name">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.ClearResponse">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ClearResponse.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000048F$SL$$LE$ClearResponse$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ClearResponse.#ctor(CsvCodeGen.ConfigWebService.ClearResponseBody)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000048F$SL$$LE$ClearResponse$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.ClearResponseBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ClearResponseBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000492$SL$$LE$ClearResponseBody$EL$ class.</summary>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.LoadConfigRequest">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigRequest.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000494$SL$$LE$LoadConfigRequest$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigRequest.#ctor(CsvCodeGen.ConfigWebService.LoadConfigRequestBody)">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000494$SL$$LE$LoadConfigRequest$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.LoadConfigRequestBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigRequestBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000497$SL$$LE$LoadConfigRequestBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigRequestBody.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
Initializes a new instance of the $LS$topic_0000000000000497$SL$$LE$LoadConfigRequestBody$EL$ class.</summary>
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.LoadConfigResponse">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigResponse.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000049A$SL$$LE$LoadConfigResponse$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigResponse.#ctor(CsvCodeGen.ConfigWebService.LoadConfigResponseBody)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000049A$SL$$LE$LoadConfigResponse$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.LoadConfigResponseBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigResponseBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000049D$SL$$LE$LoadConfigResponseBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigResponseBody.#ctor(System.String)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000049D$SL$$LE$LoadConfigResponseBody$EL$ class.</summary>
      <param name="LoadConfigResult">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.LoadConfigFileBytesRequest">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigFileBytesRequest.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004A0$SL$$LE$LoadConfigFileBytesRequest$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigFileBytesRequest.#ctor(CsvCodeGen.ConfigWebService.LoadConfigFileBytesRequestBody)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004A0$SL$$LE$LoadConfigFileBytesRequest$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.LoadConfigFileBytesRequestBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigFileBytesRequestBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004A3$SL$$LE$LoadConfigFileBytesRequestBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigFileBytesRequestBody.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004A3$SL$$LE$LoadConfigFileBytesRequestBody$EL$ class.</summary>
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.LoadConfigFileBytesResponse">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigFileBytesResponse.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004A6$SL$$LE$LoadConfigFileBytesResponse$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigFileBytesResponse.#ctor(CsvCodeGen.ConfigWebService.LoadConfigFileBytesResponseBody)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004A6$SL$$LE$LoadConfigFileBytesResponse$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.LoadConfigFileBytesResponseBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigFileBytesResponseBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004A9$SL$$LE$LoadConfigFileBytesResponseBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.LoadConfigFileBytesResponseBody.#ctor(System.Byte[])">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004A9$SL$$LE$LoadConfigFileBytesResponseBody$EL$ class.</summary>
      <param name="LoadConfigFileBytesResult">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.SaveConfigRequest">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.SaveConfigRequest.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004AC$SL$$LE$SaveConfigRequest$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.SaveConfigRequest.#ctor(CsvCodeGen.ConfigWebService.SaveConfigRequestBody)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004AC$SL$$LE$SaveConfigRequest$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.SaveConfigRequestBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.SaveConfigRequestBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004AF$SL$$LE$SaveConfigRequestBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.SaveConfigRequestBody.#ctor(System.String,System.String,System.String,System.String,System.Object)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004AF$SL$$LE$SaveConfigRequestBody$EL$ class.</summary>
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
      <param name="data">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.SaveConfigResponse">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.SaveConfigResponse.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004B2$SL$$LE$SaveConfigResponse$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.SaveConfigResponse.#ctor(CsvCodeGen.ConfigWebService.SaveConfigResponseBody)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004B2$SL$$LE$SaveConfigResponse$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.SaveConfigResponseBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.SaveConfigResponseBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004B5$SL$$LE$SaveConfigResponseBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.SaveConfigResponseBody.#ctor(System.Boolean)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004B5$SL$$LE$SaveConfigResponseBody$EL$ class.</summary>
      <param name="SaveConfigResult">
If set to <see langword="true" />, then ; otherwise, .</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.GetTypeListRequest">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.GetTypeListRequest.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004B8$SL$$LE$GetTypeListRequest$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.GetTypeListRequest.#ctor(CsvCodeGen.ConfigWebService.GetTypeListRequestBody)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004B8$SL$$LE$GetTypeListRequest$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.GetTypeListRequestBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.GetTypeListRequestBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004BB$SL$$LE$GetTypeListRequestBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.GetTypeListRequestBody.#ctor(System.String,System.String,System.String)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004BB$SL$$LE$GetTypeListRequestBody$EL$ class.</summary>
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.GetTypeListResponse">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.GetTypeListResponse.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004BE$SL$$LE$GetTypeListResponse$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.GetTypeListResponse.#ctor(CsvCodeGen.ConfigWebService.GetTypeListResponseBody)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004BE$SL$$LE$GetTypeListResponse$EL$ class.</summary>
      <param name="Body">
</param>
    </member>
    <member name="T:CsvCodeGen.ConfigWebService.GetTypeListResponseBody">
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.GetTypeListResponseBody.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004C1$SL$$LE$GetTypeListResponseBody$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.GetTypeListResponseBody.#ctor(CsvCodeGen.ConfigWebService.ArrayOfString)">
      <summary>
Initializes a new instance of the $LS$topic_00000000000004C1$SL$$LE$GetTypeListResponseBody$EL$ class.</summary>
      <param name="GetTypeListResult">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_000000000000036E$SL$$LE$ConfigSoapClient$EL$ class.</summary>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.#ctor(System.String)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000036E$SL$$LE$ConfigSoapClient$EL$ class.</summary>
      <param name="endpointConfigurationName">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.#ctor(System.String,System.String)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000036E$SL$$LE$ConfigSoapClient$EL$ class.</summary>
      <param name="endpointConfigurationName">
</param>
      <param name="remoteAddress">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000036E$SL$$LE$ConfigSoapClient$EL$ class.</summary>
      <param name="endpointConfigurationName">
</param>
      <param name="remoteAddress">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>
Initializes a new instance of the $LS$topic_000000000000036E$SL$$LE$ConfigSoapClient$EL$ class.</summary>
      <param name="binding">
</param>
      <param name="remoteAddress">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.Clear(System.String,System.String)">
      <param name="token">
</param>
      <param name="name">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.LoadConfig(System.String,System.String,System.String,System.String)">
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.LoadConfigFileBytes(System.String,System.String,System.String,System.String)">
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.SaveConfig(System.String,System.String,System.String,System.String,System.Object)">
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
      <param name="key">
</param>
      <param name="data">
</param>
    </member>
    <member name="M:CsvCodeGen.ConfigWebService.ConfigSoapClient.GetTypeList(System.String,System.String,System.String)">
      <param name="token">
</param>
      <param name="app">
</param>
      <param name="type">
</param>
    </member>
  </members>
</doc>
